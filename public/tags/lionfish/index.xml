<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lionfish | Amelia L. Ritger</title>
    <link>/tags/lionfish/</link>
      <atom:link href="/tags/lionfish/index.xml" rel="self" type="application/rss+xml" />
    <description>lionfish</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 01 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>lionfish</title>
      <link>/tags/lionfish/</link>
    </image>
    
    <item>
      <title>Diet choice in a generalist predator, the invasive lionfish (*Pterois volitans/miles*)</title>
      <link>/publication/jembe/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/publication/jembe/</guid>
      <description>&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lionfish diet choice experiment</title>
      <link>/post/lionfish-diet-choice/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/lionfish-diet-choice/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Lion fish preference index
# june 2018 written
# Cleaned by Amelia Ritger in January 2020

###############################################################
# save.image(&amp;quot;lionfish.RData&amp;quot;)
# load(&amp;quot;lionfish.RData&amp;quot;)
###############################################################
##RUN THIS
data_all &amp;lt;- read.csv(&amp;quot;lionfishdata.csv&amp;quot;)

data_x &amp;lt;-data.frame(Starve_time = data_all$Starvationtime_hours,
                    cloudcover = data_all$Cloudcover,sex = data_all$Sex,
                    lf_std_length = data_all$Lionfishstandardlength_cm, lf_wetwgt = data_all$LionfishWetWeight_g,
                    mooncycle = data_all$Mooncycle,depthcaptured = data_all$Depthcaptured_m,bodycond = data_all$BodyCondition,Lionfish_totlength = data_all$Lionfishtotallength_cm)
counts &amp;lt;- data.frame(N_chromis = data_all$Numberchromisconsumed, N_goby = data_all$Numbergobyconsumed,N_wrasse = data_all$Numberwrasseconsumed)
########################
# Use zCompositions to replace zeros using bayesian multiplicative methods
library(&amp;#39;zCompositions&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;zCompositions&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: MASS&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: NADA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: survival&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;NADA&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:stats&amp;#39;:
## 
##     cor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: truncnorm&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c_tot &amp;lt;- counts$N_chromis + counts$N_wrasse + counts$N_goby
rep_p &amp;lt;- cmultRepl(counts,method = &amp;quot;SQ&amp;quot;) # proportions data with zeros replaced&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No. corrected values:  3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep_count&amp;lt;-rep_p*c_tot

colnames(rep_count) &amp;lt;- colnames(rep_p) &amp;lt;- colnames(counts)

rep_biomass &amp;lt;- rep_count*matrix(rep(c(0.641,0.129,0.655),nrow = nrow(rep_count)))
###################################
# MAIL MICHELE:
### 11chromis, 55 gobies, 11wrasses
#############################
# T^2 hotelling
library(rrcov)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;rrcov&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: robustbase&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;robustbase&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:survival&amp;#39;:
## 
##     heart&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Scalable Robust Estimators with High Breakdown Point (version 1.4-9)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#
fsbp2ilr&amp;lt;-function(s){
  # given a vector (or a set of vectors) of a SBP formed by 0,+1,-1 
  # returns the ilr-vector (or set of) or balance
  # author: Martin (2015)
  
  bal=s
  
  if(is.null(dim(s))) 
  {
    
    den&amp;lt;-sum(bal==-1)
    num&amp;lt;-sum(bal==1)  
    bal[s==1]&amp;lt;-sqrt(den/((den+num)*num))
    bal[s==-1]&amp;lt;--sqrt(num/((den+num)*den))
    
    
  }
  else
  {
    numsbp=dim(s)[1]
    for (f in 1:numsbp) {
      den&amp;lt;-sum(bal[f,]==-1)
      num&amp;lt;-sum(bal[f,]==1)  
      bal[f,bal[f,]==1]&amp;lt;-sqrt(den/((den+num)*num))
      bal[f,bal[f,]==-1]&amp;lt;--sqrt(num/((den+num)*den))
      
    }
    
  }
  
  return(bal)
}

# AND A FEASIBLE LOG-RATIO COULD BE
tU3=as.matrix(fsbp2ilr(rbind(c(1,-1,-1),c(0,1,-1))))
U3=t(tU3)

ilr_rep_p&amp;lt;-log(as.matrix(rep_p))%*%U3 
ilr_ref&amp;lt;-log(as.vector(c(11,55,11)/sum(c(11,55,11))))%*%U3 
#T2.test(as.matrix(ilr_rep_p),mu=as.vector(ilr_ref))
# T2 = 80.475, F = 38.120, df1 = 2, df2 = 18, p-value = 3.383e-07
# 
#  In average, the preference of the data set is different from the NULL HIPOT
#  of NO-PREFERENCE, the (11,55,11) composition
#
#
##########################################################
# INDEX of PREFERENCE based on Aitchison distance
#########################################################
# Aitchison distance
fdAit&amp;lt;-function(x,y){
  log(x) - mean(log(x))
  return(sqrt(sum((log(x) - mean(log(x)) - log(y) + mean(log(y)))^2)))
}
#
############################################################
# Non-Scaled Index 
fIndexPref&amp;lt;-function (x,xref) 
{
  if (is.vector(x)) {
    return(fdAit(x,xref)^2)
  }
  else {
    return(apply(x,1,fdAit,xref)^2)
  }
}
#
# [0,1]-Scaled Index 
fIndexPrefS&amp;lt;-function (x,xref) 
{
  if (is.vector(x)) {
    d&amp;lt;-fdAit(x,xref)^2
  }
  else {
    d&amp;lt;-apply(x,1,fdAit,xref)^2
  }
  return(1-exp(-d))
}
#
###############################################
# no preference
fIndexPref(c(3,15,3),c(11,55,11))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.972152e-31&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fIndexPrefS(c(3,15,3),c(11,55,11))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# check for the first fish
fIndexPref(rep_count[1,],c(11,55,11))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        1 
## 3.128256&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fIndexPrefS(rep_count[1,],c(11,55,11))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         1 
## 0.9562059&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# for all 20 fish with counts
(lindex_count &amp;lt;-fIndexPref(rep_count,c(11,55,11)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 3.1282556 6.4482142 7.0868658 7.6099070 7.0798673 1.9272730 7.0798673
##  [8] 7.6099070 3.4627070 7.2212980 6.2468504 6.2468504 7.6099070 6.2468504
## [15] 2.0280870 0.4918928 1.5206318 7.0798673 3.4627070 6.3834017&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lindexS_count &amp;lt;-fIndexPrefS(rep_count,c(11,55,11)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 0.9562059 0.9984167 0.9991640 0.9995045 0.9991581 0.8544554 0.9991581
##  [8] 0.9995045 0.9686552 0.9992691 0.9980635 0.9980635 0.9995045 0.9980635
## [15] 0.8684130 0.3885321 0.7814263 0.9991581 0.9686552 0.9983106&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lindex_count &amp;lt;- as.data.frame(lindex_count)
lindexS_count &amp;lt;- as.data.frame(lindexS_count)

# for all 20 fish with biomass
(lindex_biom &amp;lt;-fIndexPref(rep_biomass,c(7.051,7.095,7.205)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 9.3055855 8.0746900 6.9824973 8.7533181 0.3465590 1.9881106 8.2232784
##  [8] 0.4693835 3.5610722 4.0478786 0.1900499 6.3436792 8.7533181 0.1900499
## [15] 2.1091024 8.5532824 5.9457466 7.1858132 8.5873856 1.6021300&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lindexS_biom &amp;lt;-fIndexPrefS(rep_biomass,c(7.051,7.095,7.205)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 0.9999091 0.9996887 0.9990720 0.9998421 0.2928829 0.8630461 0.9997317
##  [8] 0.3746123 0.9715917 0.9825406 0.1730822 0.9982422 0.9998421 0.1730822
## [15] 0.8786532 0.9998071 0.9973831 0.9992427 0.9998136 0.7985331&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lindex_biom &amp;lt;- as.data.frame(lindex_biom)
lindexS_biom &amp;lt;- as.data.frame(lindexS_biom)
############################################
# total for each fish
totalN&amp;lt;-apply(rep_count,1,sum)
#############################################
###
####
# CORRELATION BETWEEN bodycondition and index of preference
# not scaled
cor(data_x$bodycond,lindex_count) # 0.479191&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      lindex_count
## [1,]     0.479191&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# WITH LOGs
cor(log(data_x$bodycond),log(lindex_count)) # 0.3974944&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      lindex_count
## [1,]    0.3974944&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# scaled
cor(data_x$bodycond,lindexS_count) # 0.2113215&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      lindexS_count
## [1,]     0.2113215&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#
#########################################
#########################################
ait &amp;lt;- numeric()
for (i in 1:nrow(rep_count)){ait &amp;lt;- c(ait,fdAit(as.numeric(rep_count[i,]),c(11,55,11)))}
#########################################
#########################################
### levels curves for Scaled index
library(compositions)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: tensorA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;tensorA&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     norm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: bayesm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome to compositions, a package for compositional data analysis.
## Find an intro with &amp;quot;? compositions&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;compositions&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:NADA&amp;#39;:
## 
##     cor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     cor, cov, dist, var&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     %*%, scale, scale.default&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##
# freq repeated
(rep_count/apply(rep_count,1,sum))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     N_chromis     N_goby   N_wrasse
## 1  0.56566478 0.37710985 0.05722537
## 2  0.07222222 0.12068966 0.80708812
## 3  0.07222222 0.10173666 0.82604111
## 4  0.84313197 0.09150635 0.06536168
## 5  0.82559429 0.10173666 0.07266905
## 6  0.50000000 0.37500000 0.12500000
## 7  0.82559429 0.10173666 0.07266905
## 8  0.84313197 0.09150635 0.06536168
## 9  0.62309221 0.31154611 0.06536168
## 10 0.68636364 0.08484848 0.22878788
## 11 0.79310345 0.12068966 0.08620690
## 12 0.79310345 0.12068966 0.08620690
## 13 0.84313197 0.09150635 0.06536168
## 14 0.79310345 0.12068966 0.08620690
## 15 0.46366548 0.46366548 0.07266905
## 16 0.07222222 0.85510873 0.07266905
## 17 0.11111111 0.44444444 0.44444444
## 18 0.82559429 0.10173666 0.07266905
## 19 0.62309221 0.31154611 0.06536168
## 20 0.44913167 0.10173666 0.44913167&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fq&amp;lt;-c(1,1,1,3,3,1,3,3,2,1,3,3,3,3,1,1,1,3,2,1)
##

niv=seq(0.1,0.9, by=0.1)
niv&amp;lt;-c(niv,0.99)
rad&amp;lt;-sqrt(-log(1-niv))
plot(acomp(c(11,55,11)),labels=colnames(counts),col=&amp;quot;black&amp;quot;,pch=&amp;quot;+&amp;quot;)
plot(acomp(rep_count),labels=colnames(counts),add=TRUE,pch=20, cex=1*fq)

for (i in 1:length(niv)){
  ellipses(acomp(c(11,55,11)),diag(rep(1,3)),r=rad[i],col=&amp;quot;black&amp;quot;,lty=3,lwd=2)
}
legend(&amp;quot;topright&amp;quot;, inset=c(0,0.2),legend=c(&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;), 
       pch=20,pt.cex=c(0.5,1,1.5),xjust=0.5,title=&amp;quot;fish number&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/lionfish-data-analysis/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;######################################
# Martin&amp;#39;s normalization + linear adjustment
a&amp;lt;-0 #min possible value
b&amp;lt;-8 #max possible value
nlindex &amp;lt;- dplyr::pull((lindex_count-a)/(b-a)) #USE THESE VALUES

######################################
## For normalized (0,1) non-linear data
reg_data &amp;lt;-  data.frame(Bodycondition = data_all$BodyCondition, Index=nlindex)

breaks &amp;lt;- seq(0.011,0.018,by = 0.0001)
mse &amp;lt;- numeric()
for (b in breaks){
  piecewise &amp;lt;- lm(Index ~ (Bodycondition &amp;gt; b), data = reg_data)
  mse &amp;lt;- rbind(mse,c(b,as.numeric(sqrt(mean(summary(piecewise)$residuals^2))),as.numeric(summary(piecewise)$r.squared)))
}

b &amp;lt;- mse[which(mse[,2] == min(mse[,2])),1]
b &amp;lt;- 0.0124

## Two sample t-test to compare group means
library(car)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;car&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: carData&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reg_data$group[reg_data$Bodycondition &amp;gt; b] &amp;lt;- 2
reg_data$group[reg_data$Bodycondition &amp;lt; b] &amp;lt;- 1
reg_data$group &amp;lt;- as.factor(reg_data$group)
leveneTest(reg_data$Index, reg_data$group) #not signficant, variance can be considered equal (TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Levene&amp;#39;s Test for Homogeneity of Variance (center = median)
##       Df F value Pr(&amp;gt;F)
## group  1  0.0899 0.7678
##       18&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t.test(reg_data$Index~reg_data$group,var.equal=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Two Sample t-test
## 
## data:  reg_data$Index by reg_data$group
## t = -3.1185, df = 18, p-value = 0.005934
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -0.6298545 -0.1227968
## sample estimates:
## mean in group 1 mean in group 2 
##       0.3988921       0.7752177&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(reg_data$Index~reg_data$group)
  
piecewise1 &amp;lt;- lm(Index ~ Bodycondition, data = reg_data[which(reg_data$Bodycondition &amp;lt; b),])
piecewise2 &amp;lt;- lm(Index ~ Bodycondition, data = reg_data[which(reg_data$Bodycondition &amp;gt; b),])
  
piecewise &amp;lt;- lm(Index ~ (Bodycondition &amp;gt; b), data = reg_data)
summary(piecewise)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Index ~ (Bodycondition &amp;gt; b), data = reg_data)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.71373 -0.04224  0.02676  0.11484  0.48609 
## 
## Coefficients:
##                       Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)             0.3989     0.1010   3.951 0.000937 ***
## Bodycondition &amp;gt; bTRUE   0.3763     0.1207   3.119 0.005934 ** 
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.2473 on 18 degrees of freedom
## Multiple R-squared:  0.3508, Adjusted R-squared:  0.3147 
## F-statistic: 9.725 on 1 and 18 DF,  p-value: 0.005934&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m_1 &amp;lt;- 0.3989 #mean group 1
m_2 &amp;lt;- m_1+0.3763 #mean group 2

pred1 &amp;lt;- predict(piecewise1,newdata = data.frame(Bodycondition = breaks[breaks &amp;lt; b]))
  pred2 &amp;lt;- predict(piecewise2,newdata = data.frame(Bodycondition = breaks[breaks &amp;gt; b]))

######################################
###From Amelia
library(ggplot2)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0
## v purrr   0.3.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()
## x dplyr::recode() masks car::recode()
## x dplyr::select() masks MASS::select()
## x purrr::some()   masks car::some()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(grid)
#create new column for each category
norm_data &amp;lt;-  data.frame(bodycondition = data_all$BodyCondition, index =reg_data$Index)
#names(norm_data) &amp;lt;- c(&amp;quot;bodycondition&amp;quot;, &amp;quot;lindex&amp;quot;)
norm_data$category &amp;lt;- ifelse(norm_data$bodycondition&amp;lt;b, &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;)

#plot with colored thresholds
a &amp;lt;- ggplot(norm_data, aes(x=bodycondition, y=index, color=category)) +
  geom_hline(yintercept=0.99, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#F0E442&amp;quot;, size=1) + #add prey preference line
  annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = 0.0184, ymin = 0.99, ymax = Inf, fill = &amp;quot;#F0E442&amp;quot;, alpha = .3, color = NA) + #add prey preference olor
  geom_hline(yintercept=0.03, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#E69F00&amp;quot;, size=1) + #add no preference line
  annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = 0.0184, ymin = -Inf, ymax = 0.03, fill = &amp;quot;#E69F00&amp;quot;, alpha = .2, color = NA) + #add no preference color
  annotate(&amp;quot;text&amp;quot;, x = 0.0183, y = 0.01, hjust = -0.215, vjust = 0, label=&amp;quot;no prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=3.5) +
  annotate(&amp;quot;text&amp;quot;, x = 0.018, y = 1.0, hjust = -0.215, vjust = 0, label=&amp;quot;strong prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=3.5) +
  geom_point(aes(shape=category), size=3, alpha=0.9, show.legend=FALSE) + #plot points
  scale_color_manual(values=c(&amp;quot;#0072B2&amp;quot;, &amp;quot;#CC79A7&amp;quot;)) + #manually change point colors
  labs(x=&amp;quot;Body condition&amp;quot;, y=&amp;quot;Index of Selectivity&amp;quot;) + #change axis labels
  geom_segment(x=0.011,xend=b,y=mean(pred1), yend=mean(pred1), colour=&amp;quot;#0072B2&amp;quot;) + #add group 1 mean line
  geom_segment(x=b,xend=0.018,y=mean(pred2), yend=mean(pred2), colour=&amp;quot;#CC79A7&amp;quot;) + #add group 2 mean line
  theme_classic() + #remove background crap
  theme(plot.margin=unit(c(1,3.6,0,0), &amp;quot;cm&amp;quot;)) + #extend plot area to allow text
  coord_cartesian(xlim = c(0.011, 0.018), clip=&amp;quot;off&amp;quot;) + #limit plot area
  scale_y_continuous(limits=c(0,1.02), #change min and max values on y axis
                     expand=c(0,0),
                     breaks=c(0,0.2,0.4,0.6,0.8,1.0)) +
  scale_x_continuous(limits=c(0.011, 0.0185),
                     breaks=c(0.010,0.012,0.014,0.016,0.018)) #change min and max values on x axis
#annotation_custom(grob = linesGrob(), xmin = 0.019, xmax = 0.019, ymin = 0.05, ymax = 0.95) +
#annotation_custom(grob = linesGrob(), xmin = 0.0195, xmax = 0.019, ymin = 0.05, ymax = 0.15)

# Disable clip-area.
gt &amp;lt;- ggplot_gtable(ggplot_build(a))
gt$layout$clip[gt$layout$name == &amp;quot;panel&amp;quot;] &amp;lt;- &amp;quot;off&amp;quot;
grid.draw(gt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/lionfish-data-analysis/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(gt)

# plot without thresholds
c &amp;lt;- ggplot(norm_data, aes(x=bodycondition, y=index, group=category)) +
  #geom_hline(yintercept=0.99, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#F0E442&amp;quot;, size=1) + #add prey preference line
  #annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = Inf, ymin = 0.99, ymax = Inf, fill = &amp;quot;#F0E442&amp;quot;, alpha = .3, color = NA) + #add prey preference color
  #geom_hline(yintercept=0.03, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#E69F00&amp;quot;, size=1) + #add no preference line
  #annotate(&amp;quot;rect&amp;quot;, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = 0.03, fill = &amp;quot;#E69F00&amp;quot;, alpha = .2, color = NA) + #add no preference color
  #annotate(&amp;quot;text&amp;quot;, x = 0.018, y = 0.01, hjust = -0.4, vjust = 0, label=&amp;quot;no prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=6) +
  #annotate(&amp;quot;text&amp;quot;, x = 0.018, y = 1.0, hjust = -0.215, vjust = 0, label=&amp;quot;strong prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=6) +
  #annotate(&amp;quot;text&amp;quot;, x = 0.0175, y = 0.065, label=&amp;quot;no prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=4) +
  #annotate(&amp;quot;text&amp;quot;, x = 0.0175, y = 0.95, label=&amp;quot;strong prey preference&amp;quot;, color = &amp;quot;black&amp;quot;, size=4) +
  geom_segment(x=0.0108,xend=b,y=m_1, yend=m_1, size=1.5, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;black&amp;quot;) + #add group 1 mean line
  geom_segment(x=b,xend=0.018,y=m_2, yend=m_2, size=1.5, linetype=&amp;quot;dotted&amp;quot;, color=&amp;quot;black&amp;quot;) + #add group 2 mean line
  geom_point(aes(color=category, fill=category), shape=21, size=7, alpha=0.9, show.legend=FALSE) + #plot points
  scale_color_manual(values=c(&amp;quot;grey19&amp;quot;, &amp;quot;black&amp;quot;)) + #manually change point colors
  scale_fill_manual(values=c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;)) +
  labs(x=&amp;quot;Body condition&amp;quot;, y=&amp;quot;Index of Selectivity&amp;quot;) + #change axis labels
  #annotate(&amp;quot;segment&amp;quot;, x=0.0175, xend=0.0175, y=0.915, yend=0.085, color=&amp;quot;black&amp;quot;, size=1, arrow=arrow(length=unit(0.08,&amp;quot;npc&amp;quot;))) + #add arrow
  theme_classic() + #remove background crap
  theme(plot.margin=unit(c(4,5,4,4), &amp;quot;cm&amp;quot;),
        axis.text=element_text(size=24),
        axis.title=element_text(size=30)) + #extend plot area to allow text
  scale_y_continuous(limits=c(0,1.02), #change min and max values on y axis
                     expand=c(0,0),
                     breaks=c(0,0.2,0.4,0.6,0.8,1.0)) +
  scale_x_continuous(limits=c(0.011, 0.018),
                     breaks=c(0.010,0.012,0.014,0.016,0.018)) #change min and max values on x axis


# Disable clip-area.
gt &amp;lt;- ggplot_gtable(ggplot_build(c))
gt$layout$clip[gt$layout$name == &amp;quot;panel&amp;quot;] &amp;lt;- &amp;quot;off&amp;quot;
grid.draw(gt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/lionfish-data-analysis/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bioaccumulation of mercury and other metal contaminants in invasive lionﬁsh (*Pterois volitans/miles*) from Curaçao</title>
      <link>/publication/mpb/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      <guid>/publication/mpb/</guid>
      <description>


&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Invasive lionfish</title>
      <link>/research/lionfish/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/research/lionfish/</guid>
      <description>


&lt;p&gt;Insert project details right here&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
